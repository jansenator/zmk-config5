#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        jlrHRM: jlrHRM {
            compatible = "zmk,behavior-hold-tap";
            label = "JLRHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <32 31 30 29 41 42 43 44>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL         &kp N1              &kp N2              &kp N3                  &kp N4              &kp N5  &kp LS(LG(M))                                                                          &mo 3  &kp N6  &kp N7                &kp N8                   &kp N9               &kp N0                       &kp MINUS
&kp TAB           &kp Q               &kp W               &kp E                   &kp R               &kp T   &kp LC(LS(H))                                                                          &mo 2  &kp Y   &kp U                 &kp I                    &kp O                &kp P                        &kp BSLH
&kp CAPSLOCK      &jlrHRM LEFT_GUI A  &jlrHRM LEFT_ALT S  &jlrHRM LEFT_CONTROL D  &jlrHRM LEFT_GUI F  &kp G   &kp LS(LA(LC(LG(D))))               &kp ESCAPE  &none    &none  &kp ESCAPE             &none  &kp H   &jlrHRM RIGHT_GUI J   &jlrHRM RIGHT_CONTROL K  &jlrHRM RIGHT_ALT L  &jlrHRM RIGHT_GUI SEMICOLON  &kp SQT
&kp LEFT_SHIFT    &kp Z               &kp X               &kp C                   &kp V               &kp B                                                   &none    &none                                &kp N   &kp M                 &kp COMMA                &kp DOT              &kp FSLH                     &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_GUI        &kp GRAVE           &kp DEL                 &kp BACKSPACE                                      &lt 1 SPACE  &kp ENTER   &none    &none  &kp ENTER   &kp SPACE                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LS(LBKT)         &kp LS(RBKT)                 &kp RIGHT_ALT
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp END        &kp LC(DOWN)            &kp LC(UP_ARROW)  &kp LA(LC(LG(N)))      &kp LS(LG(SLASH))  &none                                                               &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp HOME       &kp LG(LS(GRAVE))       &kp UP_ARROW      &kp LG(GRAVE)          &kp C_VOL_UP       &none                                                               &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(PLUS)   &kp LEFT_ARROW          &kp DOWN_ARROW    &kp RIGHT_ARROW        &kp C_VOL_DN       &kp C_PLAY_PAUSE          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(MINUS)  &kp LA(LG(LEFT_ARROW))  &kp LA(LS(A))     &kp LA(LG(RIGHT))      &kp LG(LC(SPACE))                                    &trans    &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(LC(C))  &kp LG(LEFT_BRACKET)    &kp LA(LS(D))     &kp LG(RIGHT_BRACKET)                                       &trans  &trans  &trans    &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
            >;
        };

        fn {
            bindings = <
&none   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &none                                                    &none  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &none
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &none                                                    &none  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &trans   &trans   &trans   &trans   &trans   &none          &trans  &trans    &trans  &trans          &none  &trans   &trans   &trans   &trans   &trans   &trans
&trans  &trans   &trans   &trans   &trans   &trans                          &trans    &trans                         &trans   &trans   &trans   &trans   &trans   &trans
&trans  &trans   &trans   &trans   &trans                   &trans  &trans  &trans    &trans  &trans  &trans                  &trans   &trans   &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                        &trans       &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                  &bootloader  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none               &none  &none    &bt BT_CLR  &none                        &none        &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                                    &none    &none                                                 &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                                    &none  &none  &none    &none       &bl BL_TOG  &rgb_ug RGB_TOG                      &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
